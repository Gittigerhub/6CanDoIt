spring.application.name=roomservice

# 서버 설정
server.port=8080

# 데이터베이스 설정
spring.profiles.active=h2

# 개발환경
# java수정시 서버 재실행
spring.devtools.restart.enabled=true
# html수정시 바로 적용
spring.devtools.livereload.enabled=true

# JPA 설정
# Entity를 수정시 데이터베이스 삭제 후 사용
# update 대신 create로 수정 후 사용
# RDS, MariaDB를 사용시 변경사항이 있으면 heidiSQL로 수정해서 사용
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true

# thymeleaf 설정
# 개발시 false, 프로젝트 완성 및 배포시 true
spring.thymeleaf.cache=false
spring.thymeleaf.encoding=UTF-8
# 마지막에 /표기 필수
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
# 없는 html사용을 방지(html 지정시 오류 방지)
spring.thymeleaf.check-template-location=true

# 파일업로드
# 파일업로드 활성화
spring.servlet.multipart.enabled=true
# 전달할 전체 크기(용량) 전체용량/파일크기=한번에 전송가능한 파일수
spring.servlet.multipart.max-request-size=30MB
# 각 이미지파일(pdf파일)등 전송할 파일의 최대크기(용량)
spring.servlet.multipart.max-file-size=2MB

# 로컬작업(저장할 폴더위치)-리눅스 서버 사용시도 변경
# 파일이 저장할 때(실질적인 파일 작업)
uploadPath = file://c:/data
# 파일이 읽을 때(내부작업)
dataUploadPath = c:/data

# 이메일
# Google에 외부 메일전송 키를 발급

# 메일 보내주는 서버
spring.mail.host=smtp.gmail.com
# 메일 포트 번호
spring.mail.port=587
# 본인 메일
spring.mail.username=jh.24workspace@gmail.com
# 키
spring.mail.password=kkrb arej jsym yrya
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
# 비밀번호 임시발급
# 가입메일 확인 -> 메일로 접속주소와 비밀키로 전달해서 -> 페이지에 비밀키값이 들어오는걸 비교
# 맞으면 정확한 이메일, 틀리면 가입할 수 없는 메일

# 섹션 유지시간 설정(로그인 유지시간)
server.servlet.session.timeout=5m

#\uB85C\uADF8
logging.level.org.hibernate.type.descriptor.sql = trace