spring.application.name=roomservice

# \uC11C\uBC84 \uC124\uC815
server.port=8080

# \uB370\uC774\uD130\uBCA0\uC774\uC2A4 \uC124\uC815
spring.profiles.active=mariaDB

# \uAC1C\uBC1C\uD658\uACBD
# java\uC218\uC815\uC2DC \uC11C\uBC84 \uC7AC\uC2E4\uD589
spring.devtools.restart.enabled=true
# html\uC218\uC815\uC2DC \uBC14\uB85C \uC801\uC6A9
spring.devtools.livereload.enabled=true

# JPA \uC124\uC815
# Entity\uB97C \uC218\uC815\uC2DC \uB370\uC774\uD130\uBCA0\uC774\uC2A4 \uC0AD\uC81C \uD6C4 \uC0AC\uC6A9
# update \uB300\uC2E0 create\uB85C \uC218\uC815 \uD6C4 \uC0AC\uC6A9
# RDS, MariaDB\uB97C \uC0AC\uC6A9\uC2DC \uBCC0\uACBD\uC0AC\uD56D\uC774 \uC788\uC73C\uBA74 heidiSQL\uB85C \uC218\uC815\uD574\uC11C \uC0AC\uC6A9
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true

# thymeleaf \uC124\uC815
# \uAC1C\uBC1C\uC2DC false, \uD504\uB85C\uC81D\uD2B8 \uC644\uC131 \uBC0F \uBC30\uD3EC\uC2DC true
spring.thymeleaf.cache=false
spring.thymeleaf.encoding=UTF-8
# \uB9C8\uC9C0\uB9C9\uC5D0 /\uD45C\uAE30 \uD544\uC218
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
# \uC5C6\uB294 html\uC0AC\uC6A9\uC744 \uBC29\uC9C0(html \uC9C0\uC815\uC2DC \uC624\uB958 \uBC29\uC9C0)
spring.thymeleaf.check-template-location=true

# \uD30C\uC77C\uC5C5\uB85C\uB4DC
# multipart\uB294 \uBC18\uB4DC\uC2DC post\uB85C \uC804\uC1A1\uAC00\uB2A5
# \uC6F9\uC5D0\uC11C \uB2E4\uC911 \uD30C\uC77C \uC804\uC1A1\uAE30\uB2A5\uC744 \uD65C\uC131\uD654
# \uD30C\uC77C\uC5C5\uB85C\uB4DC \uD65C\uC131\uD654
spring.servlet.multipart.enabled=true
# \uD30C\uC77C\uC758 \uC804\uCCB4 \uD06C\uAE30(\uC6A9\uB7C9) \uC804\uCCB4\uC6A9\uB7C9/\uD30C\uC77C\uD06C\uAE30=\uD55C\uBC88\uC5D0 \uC804\uC1A1\uAC00\uB2A5\uD55C \uD30C\uC77C\uC218
spring.servlet.multipart.max-request-size=50MB
# \uAC01 \uC774\uBBF8\uC9C0\uD30C\uC77C(pdf\uD30C\uC77C)\uB4F1 1\uAC1C\uC758 \uC804\uC1A1\uD560 \uD30C\uC77C\uC758 \uCD5C\uB300\uD06C\uAE30(\uC6A9\uB7C9)
spring.servlet.multipart.max-file-size=10MB

# S3
# S3\uC5D0 \uC800\uC7A5\uD560 \uD3F4\uB354\uBA85
imgUploadLocation = images

# S3\uC811\uADFC\uC815\uBCF4(\uACF5\uAC1C\uD0A4, \uBE44\uBC00\uD0A4, \uC815\uBCF4)
cloud.aws.credentials.access-Key=${aws.accessKey}
cloud.aws.credentials.secret-Key=${aws.secretKey}
cloud.aws.s3.bucket=${aws.s3.bucket}
cloud.aws.region.static=${aws.region}
cloud.aws.stack.auto=${aws.stack}

# \uC774\uBA54\uC77C
# Google\uC5D0 \uC678\uBD80 \uBA54\uC77C\uC804\uC1A1 \uD0A4\uB97C \uBC1C\uAE09

# \uBA54\uC77C \uBCF4\uB0B4\uC8FC\uB294 \uC11C\uBC84
spring.mail.host=smtp.gmail.com
# \uBA54\uC77C \uD3EC\uD2B8 \uBC88\uD638
spring.mail.port=587
# \uBCF8\uC778 \uBA54\uC77C
spring.mail.username=himyeongsun@gmail.com
# \uD0A4
spring.mail.password=kuiv ehiw rbnh cubr
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com

# \uBE44\uBC00\uBC88\uD638 \uC784\uC2DC\uBC1C\uAE09
# \uAC00\uC785\uBA54\uC77C \uD655\uC778 -> \uBA54\uC77C\uB85C \uC811\uC18D\uC8FC\uC18C\uC640 \uBE44\uBC00\uD0A4\uB85C \uC804\uB2EC\uD574\uC11C -> \uD398\uC774\uC9C0\uC5D0 \uBE44\uBC00\uD0A4\uAC12\uC774 \uB4E4\uC5B4\uC624\uB294\uAC78 \uBE44\uAD50
# \uB9DE\uC73C\uBA74 \uC815\uD655\uD55C \uC774\uBA54\uC77C, \uD2C0\uB9AC\uBA74 \uAC00\uC785\uD560 \uC218 \uC5C6\uB294 \uBA54\uC77C

# \uC139\uC158 \uC720\uC9C0\uC2DC\uAC04 \uC124\uC815(\uB85C\uADF8\uC778 \uC720\uC9C0\uC2DC\uAC04)
server.servlet.session.timeout=30m

#\uB85C\uADF8
#logging.level.org.springframework=debug
logging.level.org.hibernate.type.descriptor.sql = trace

#\uC11C\uBC84\uAC00 \uC885\uB8CC\uB418\uBA74 \uBAA8\uB4E0 \uC138\uC158\uC774 \uC0AD\uC81C
server.servlet.session.persistent=false